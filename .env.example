# MegaVault Open Source Cloud Storage - Environment Configuration
# ==================================================================================
# 
# ⚠️  SECURITY WARNING ⚠️
# 1. NEVER commit this file with real credentials to version control
# 2. Change ALL default passwords and secrets before deployment
# 3. Use HTTPS in production environments
# 4. Restrict database and storage access to trusted networks only
# 5. Generate cryptographically secure secrets (32+ characters)
# 6. Regular security updates and monitoring are required
#
# ==================================================================================

# ==================================================================================
# AUTHENTICATION CONFIGURATION (REQUIRED)
# ==================================================================================
# Single-user authentication credentials
# IMPORTANT: Change these default values immediately!

USER_EMAIL=admin@yourdomain.com
USER_PASSWORD=create-strong-password-minimum-20-characters

# JWT signing secret - MUST be 32+ characters, cryptographically random
# Generate with: openssl rand -hex 32
NEXTAUTH_SECRET=generate-random-64-character-string-change-this-immediately

# Application URL (change for production)
NEXTAUTH_URL=http://localhost:3001

# ==================================================================================
# DATABASE CONFIGURATION (REQUIRED)
# ==================================================================================
# Upstash Redis configuration for user data and session management
# Sign up at: https://upstash.com/

UPSTASH_REDIS_REST_URL=your-redis-url-here
UPSTASH_REDIS_REST_TOKEN=your-redis-token-here

# ==================================================================================
# STORAGE ACCESS CONFIGURATION (OPTIONAL)
# ==================================================================================
# Choose between complete bucket access or folder-specific access
# 
# STORAGE_ACCESS_MODE options:
# - "bucket" : Complete bucket access (files stored at bucket root)
# - "folder" : Folder-specific access (files stored within specified folder)
#
# When using "folder" mode, specify the folder name below
# When using "bucket" mode, USER_STORAGE_FOLDER is ignored

STORAGE_ACCESS_MODE=folder
USER_STORAGE_FOLDER=single-user-folder

# ==================================================================================
# STORAGE CONFIGURATION (REQUIRED)
# ==================================================================================
# S3-Compatible Storage - Supports multiple providers:
# - Cloudflare R2 (recommended): https://developers.cloudflare.com/r2/
# - AWS S3: https://aws.amazon.com/s3/
# - MinIO (self-hosted): https://min.io/
# - DigitalOcean Spaces: https://www.digitalocean.com/products/spaces/
# - Backblaze B2: https://www.backblaze.com/b2/cloud-storage.html
# - Wasabi: https://wasabi.com/

# Cloudflare R2 Example Configuration:
CLOUDFLARE_R2_ENDPOINT=https://your-account-id.r2.cloudflarestorage.com
CLOUDFLARE_R2_ACCESS_KEY_ID=your-r2-access-key-id
CLOUDFLARE_R2_SECRET_ACCESS_KEY=your-r2-secret-access-key
CLOUDFLARE_R2_BUCKET=your-bucket-name
CLOUDFLARE_R2_REGION=auto

# AWS S3 Example Configuration (uncomment and configure if using AWS S3):
# CLOUDFLARE_R2_ENDPOINT=https://s3.us-east-1.amazonaws.com
# CLOUDFLARE_R2_ACCESS_KEY_ID=your-aws-access-key
# CLOUDFLARE_R2_SECRET_ACCESS_KEY=your-aws-secret-key
# CLOUDFLARE_R2_BUCKET_NAME=your-s3-bucket-name
# CLOUDFLARE_R2_REGION=us-east-1

# MinIO Example Configuration (uncomment and configure if using MinIO):
# CLOUDFLARE_R2_ENDPOINT=https://your-minio-server:9000
# CLOUDFLARE_R2_ACCESS_KEY_ID=your-minio-access-key
# CLOUDFLARE_R2_SECRET_ACCESS_KEY=your-minio-secret-key
# CLOUDFLARE_R2_BUCKET=your-minio-bucket
# CLOUDFLARE_R2_REGION=us-east-1

# ==================================================================================
# APPLICATION FEATURES (OPTIONAL)
# ==================================================================================
# Enable/disable specific features

# Public registration (keep disabled for single-user setup)
ENABLE_PUBLIC_REGISTRATION=false

# File sharing capabilities
ENABLE_FILE_SHARING=true

# 3D visualization (experimental feature)
ENABLE_3D_VISUALIZATION=false

# ==================================================================================
# STORAGE LIMITS (OPTIONAL)
# ==================================================================================
# Leave commented for unlimited storage and file sizes

# Default storage limit per user in GB (uncomment to enable)
# DEFAULT_STORAGE_LIMIT_GB=100

# Maximum file size in MB (uncomment to enable)
# MAX_FILE_SIZE_MB=1000

# ==================================================================================
# CUSTOM BRANDING (OPTIONAL)
# ==================================================================================
# Customize the application name and description

APP_NAME=MegaVault
APP_DESCRIPTION=Open Source Cloud Storage

# ==================================================================================
# SECURITY CHECKLIST
# ==================================================================================
# Before deploying to production, ensure:
# 
# ✅ Changed USER_EMAIL and USER_PASSWORD from defaults
# ✅ Generated a secure NEXTAUTH_SECRET (32+ characters)
# ✅ Updated NEXTAUTH_URL to production domain with HTTPS
# ✅ Configured firewall rules for Redis and storage access
# ✅ Enabled HTTPS/TLS encryption for all services
# ✅ Set up monitoring and alerting for security events
# ✅ Configured regular backups for critical data
# ✅ Reviewed and updated all service access policies
# ✅ Enabled audit logging for storage and database access
# ✅ Implemented rate limiting and DDoS protection
#
# ==================================================================================

# ==================================================================================
# QUICK START GUIDE
# ==================================================================================
#
# 1. Copy this file to .env.local:
#    cp .env.example .env.local
#
# 2. Update the configuration with your actual values
#
# 3. Set up your storage service (Cloudflare R2 recommended):
#    - Create account and bucket
#    - Generate access keys
#    - Configure CORS if needed
#
# 4. Set up Redis database (Upstash recommended):
#    - Create account and database
#    - Copy connection URL and token
#
# 5. Generate secure credentials:
#    - Strong password for USER_PASSWORD
#    - Random secret for NEXTAUTH_SECRET
#
# 6. Start the application:
#    npm run dev
#
# For production deployment, see: https://github.com/iotserver24/S3-MegaVault
#
# ==================================================================================
