version: '3.8'

services:
  # MegaVault Web Application
  megavault:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: megavault-app
    ports:
      - \"3001:3001\"
    environment:
      # Node.js Configuration
      - NODE_ENV=production
      - PORT=3001
      
      # Application URL
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3001}
      
      # Authentication (REQUIRED)
      - USER_EMAIL=${USER_EMAIL:-admin@yourdomain.com}
      - USER_PASSWORD=${USER_PASSWORD:-create-strong-password-minimum-20-characters}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-generate-random-64-character-string-change-this-immediately}
      
      # Database Configuration (REQUIRED)
      - UPSTASH_REDIS_REST_URL=${UPSTASH_REDIS_REST_URL:-redis://redis:6379}
      - UPSTASH_REDIS_REST_TOKEN=${UPSTASH_REDIS_REST_TOKEN:-default_token}
      
      # Storage Configuration (REQUIRED)
      - S3_ENDPOINT=${S3_ENDPOINT:-https://your-account-id.r2.cloudflarestorage.com}
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID:-your-access-key-id}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY:-your-secret-access-key}
      - S3_BUCKET=${S3_BUCKET:-your-bucket-name}
      - S3_REGION=${S3_REGION:-auto}
      
      # Storage Access Mode
      - STORAGE_ACCESS_MODE=${STORAGE_ACCESS_MODE:-folder}
      - USER_STORAGE_FOLDER=${USER_STORAGE_FOLDER:-single-user-folder}
      
      # Application Features
      - ENABLE_PUBLIC_REGISTRATION=${ENABLE_PUBLIC_REGISTRATION:-false}
      - ENABLE_FILE_SHARING=${ENABLE_FILE_SHARING:-true}
      - ENABLE_3D_VISUALIZATION=${ENABLE_3D_VISUALIZATION:-false}
      
      # Application Branding
      - APP_NAME=${APP_NAME:-MegaVault}
      - APP_DESCRIPTION=${APP_DESCRIPTION:-Open Source Cloud Storage}
    depends_on:
      - redis
    restart: unless-stopped
    volumes:
      # Optional: Bind mount for logs
      - ./logs:/app/logs
    networks:
      - megavault-network

  # Redis Database
  redis:
    image: redis:7-alpine
    container_name: megavault-redis
    ports:
      - \"6379:6379\"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-megavault_redis_password}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-megavault_redis_password}
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    restart: unless-stopped
    networks:
      - megavault-network

  # Optional: Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: megavault-nginx
    ports:
      - \"80:80\"
      - \"443:443\"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - megavault
    restart: unless-stopped
    networks:
      - megavault-network
    profiles:
      - with-nginx

volumes:
  redis_data:
    driver: local

networks:
  megavault-network:
    driver: bridge

# Development override
# Use: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up
---
version: '3.8'

# Development overrides
services:
  megavault:
    build:
      target: development
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
    command: npm run dev